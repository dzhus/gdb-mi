-*-org-*-

#+TAGS: threads(t) ui(u) new(n) parsing(p) GDB(g) cleanup(c)
  
* IN PROGRESS [#A] Non-stop support                                 :threads:
  Related reading:
  1. [[gnus:gmane.comp.gdb.devel#200803190016.02072.vladimir@codesourcery.com][MI non-stop mode spec]];
  2. [[gnus:gmane.comp.gdb.devel#200804261939.37635.vladimir@codesourcery.com][MI non-stop interface details]];
     1. [[gnus:gmane.comp.gdb.devel#200805011852.25316.pedro@codesourcery.com][Pedro Alves: Re: MI non-stop interface details]] — -exec
        commands behaviour.
  3. [[gnus:gmane.comp.gdb.devel#200806032253.39575.pedro@codesourcery.com][non-stop and current thread exiting]];
  4. [[gnus:gmane.comp.gdb.devel#200805051232.31733.vladimir@codesourcery.com][Adjust MI non-stop/MI3 spec]] — big spec from Volodya.
  5. [[gnus:gmane.comp.gdb.devel#200806181601.52404.vladimir@codesourcery.com][Email from Vladimir Prus: MI threads behaviour]]


** DONE Update threads buffer in real-time
   CLOSED: [2009-07-13 Пнд] 

   *running messages are asynchronously issued whenever new thread is
   created. We also use =thread-exited to update threads buffer.
** IN PROGRESS Handle *stopped and =thread-selected to select new main current thread
   Current thread selection should be handled in Emacs (in gdb-stopped
   handler). 
** TODO Handle -exec properly
   When issued via thread list buffer, use only current thread; use
   --all threads otherwise. Make this behaviour customizable.
    
* TODO [#A] Improve multi-thread UI                                 :threads:
  Thread-bound buffers produce just a big mess. When observing several
  threads, information should be presented in a more usable way.
  
  Ideas:
  
  - tree view for thread stacks in thread list buffer

  - tab-like buttons for different threads in buffers showing
    locals&registers

* TODO [#B] Support --frame                                             :new:
  It should be possible to see locals for different frames, not only
  the top one. Does it make sense to update such buffers as we step
  through the target?
* Disassembly buffer
** TODO Hyperlinks for jump instructions in disassembly buffer       :ui:new:
   Add clickable buttons for jmp, jl arguments
    
** TODO Disassemble function around point                               :new:

** TODO Show main when program is not running

* Memory buffer
** TODO Show function name instead of just address                   :ui:GDB:
   
   MI does not provide function name in -data-read-memory
   output =\ [[-symbol-info-symbol]] should allow this, but it's
   not implemented yet.

* TODO [0/5] [#C] Rewrite handlers for -var commands                :parsing:
  - [ ] gdb-var-create-handler
  - [ ] gdb-var-evaluate-expression-handler
  - [ ] gdb-edit-value-handler
  - [ ] gdb-var-list-children-handler
  - [ ] gdb-var-update-handler
   
* TODO [#C] Stack information handling
  gdb-frame-handler is not robust. Must think of how should gdb-mi
  act when we stop in a routine w/o line info. Currently we simply
  don't reset gud-last-frame in this case. Disassembly buffer falls
  back to displaying main as gdb-selected-file gets nil.

  When line information for top frame is unavailable, it's reasonable
  to make gdb-mi obey the highest of frames which have line:

  For example:

  2 in start_thread of /lib/libpthread.so.0
  1 in hello of hello.c:8 <-- we should display this frame
  0 in printf of /lib/libc.so.6

  The same applies to disassembly buffer.

* TODO [#D] Support overlay arrow in threads list for text terminals     :ui:

* TODO Change gdb-display-buffer
  Too many windows appear now. It should be possible to preempt
  visible buffer of some specific type with the same buffer for
  another thread. gdb-get-buffer-by-type should be written for this.
* TODO Improve gdb-jump-to                                               :ui:
  See also gud-display-line for implementation ideas

* TODO Rewrite gdb-place-breakpoints                                :cleanup:
  
* GDB                                                                   :GDB:
** TODO Send -symbol-info-symbol patch
   Patch: [[file:~/projects/gdb-trunk/symbol-info-symbol.diff]]

   Needed to [[show function name]] in memory buffer and [[show main]] in
   disassembly.
** TODO Write -stack-list-locals-and-args
   
** TODO Add current frame data to -stack
** TODO Report that -break-info has broken script field
   http://emacsbugs.donarmstrong.com/cgi-bin/bugreport.cgi?bug=3794
   

** TODO Report wrong -exec-interrupt documentation
   -exec-interrupt accepts --thread
